@using Blazor_latest_uploader.Data
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons;
@using System.ComponentModel.DataAnnotations;
@inject CountryService ownservice

<div class="col-lg-12 control-section">
    <div class="control_wrapper">
        @if (string.IsNullOrEmpty(Message))
        {
            <EditForm Model="@model" OnValidSubmit="@onValidSubmit" OnInvalidSubmit="@onInvalidSubmit">
                <DataAnnotationsValidator />
                <div>
                    <SfComboBox Placeholder="Select a Country" @bind-Value="@model.Name" DataSource="@DataSource">
                        <ComboBoxFieldSettings Value="Code" Text="Name"></ComboBoxFieldSettings>
                    </SfComboBox>
                    <ValidationMessage For="()=>model.Name"></ValidationMessage>
                </div>
                <div class="sfButton">
                    <SfButton type="submit" IsPrimary="true">Submit</SfButton>
                </div>
            </EditForm>
        }
        else
        {
            <div class="alert alert-success">
                @Message
            </div>
        }
    </div>
</div>
<style>
    .control_wrapper {
        width: 350px;
        margin: 0 auto;
        padding-top: 70px;
    }

    .sfButton {
        padding-top: 20px;
        display: flex;
        justify-content: center;
    }

    .validation-message {
        color: red;
        padding-top: 5px;
    }
</style>

@code {

    private Countries model = new Countries();


    private string val { get; set; }

    public CountryService DataService;
    public List<Countries> DataSource = new List<Countries>();

    private string Message = string.Empty;
    async void onValidSubmit()
    {
        Message = "Form Submitted Successfully!";
        await Task.Delay(2000);
        Message = string.Empty;
        model.Name = null;
        StateHasChanged();
    }
    private void onInvalidSubmit()
    {
        Message = string.Empty;
    }

    protected override async Task OnInitializedAsync()
    {
        DataSource = await ownservice.GetDataAsync();
        model.Name = await ownservice.GetPreSelectDataAsync();
    }
}