@using Syncfusion.Blazor.Buttons;
@using Syncfusion.Blazor.DropDowns;

<div class=button>
    <button  @onclick="Show">Select All</button>
</div>
<div class=button>
    <button  @onclick="Hide">Deselect All</button>
</div>

<div class="col-lg-12">
    <div class="col-lg-8 control-section sb-property-border">
        <div class="control-wrapper">
            <label class="example-label">Select countries</label>
            <SfMultiSelect @ref="MultiSelectObj" TValue="string[]" TItem="Countries" AllowFiltering="true" Placeholder="e.g. Australia" Mode="@VisualMode.CheckBox" DataSource="@Country" ShowSelectAll="@ShowSelectAllCheckBox" EnableSelectionOrder="@EnableSelectionOrders" ShowDropDownIcon="@EnableDropDownIcon" Show FilterBarPlaceholder="Search countries" PopupHeight="350px">
                <MultiSelectFieldSettings Text="Name" Value="Code"></MultiSelectFieldSettings>
            </SfMultiSelect>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="property-panel-section">
            <div class="property-panel-header">Properties</div>
            <div class="property-panel-content">
                <SfCheckBox Label="Show SelectAll" @bind-Checked="@CheckSelectAll" ValueChange="@OnSelectAllChange" TChecked="bool"></SfCheckBox>
            </div>
            <div class="property-panel-content">
                <SfCheckBox Label="Dropdown Button" @bind-Checked="@DropDownButton" ValueChange="@OnDropDownButtonChange" TChecked="bool"></SfCheckBox>
            </div>
            <div class="property-panel-content">
                <SfCheckBox Label="Selection Reorder" @bind-Checked="@SelectionReorder" ValueChange="@OnSeletionReorder" TChecked="bool"></SfCheckBox>
            </div>
        </div>
    </div>
</div>
@code{
    SfMultiSelect<string[],Countries> MultiSelectObj;
    public bool ShowSelectAllCheckBox { get; set; } = true;
    public bool EnableSelectionOrders { get; set; } = true;
    public bool EnableDropDownIcon { get; set; } = true;
    private bool CheckSelectAll { get; set; } = true;
    private bool DropDownButton { get; set; } = true;
    private bool SelectionReorder { get; set; } = true;
    public void OnSelectAllChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.ShowSelectAllCheckBox = args.Checked;
    }
    public void OnDropDownButtonChange(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.EnableDropDownIcon = args.Checked;
    }
    public void OnSeletionReorder(Syncfusion.Blazor.Buttons.ChangeEventArgs<bool> args)
    {
        this.EnableSelectionOrders = args.Checked;
    }
    public class Countries
    {
        public string Name { get; set; }
        public string Code { get; set; }
    }
    List<Countries> Country = new List<Countries>
    {
        new Countries() { Name = "Australia", Code = "AU" },
        new Countries() { Name = "Bermuda", Code = "BM" },
        new Countries() { Name = "Canada", Code = "CA" },
        new Countries() { Name = "Cameroon", Code = "CM" },
        new Countries() { Name = "Denmark", Code = "DK" },
        new Countries() { Name = "France", Code = "FR" },
        new Countries() { Name = "Finland", Code = "FI" },
        new Countries() { Name = "Germany", Code = "DE" },
        new Countries() { Name = "Greenland", Code = "GL" },
        new Countries() { Name = "Hong Kong", Code = "HK" },
        new Countries() { Name = "India", Code = "IN" },
        new Countries() { Name = "Italy", Code = "IT" },
        new Countries() { Name = "Japan", Code = "JP" },
        new Countries() { Name = "Mexico", Code = "MX" },
        new Countries() { Name = "Norway", Code = "NO" },
        new Countries() { Name = "Poland", Code = "PL" },
        new Countries() { Name = "Switzerland", Code = "CH" },
        new Countries() { Name = "United Kingdom", Code = "GB" },
        new Countries() { Name = "United States", Code = "US" }
    };

    public void Show()
    {
        this.MultiSelectObj.SelectAllAsync(true);
    }

    public void Hide()
    {
        this.MultiSelectObj.SelectAllAsync(false);
    }
}
<style>
    .control-wrapper {
        max-width: 300px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
    .property-panel-content {
        padding: 0px 0px 15px 0px;
    }
    .property-panel-content:last-child {
        padding: 0px 0px 40px 0px;
    }
</style>